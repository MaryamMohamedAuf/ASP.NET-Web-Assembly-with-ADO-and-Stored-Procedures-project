@page "/UsersList"
@inject SOFCOproject.Client.Services.UserService UserService
@using SOFCOproject.Shared.Models
@inject NavigationManager NavigationManager

<h3 style="margin-bottom: 20px;">Users</h3>

@if (users != null && users.Any())
{
    <RadzenCard Style="padding: 20px; background-color: #f5f5f5;">
        @foreach (var user in users)
        {
            <div style="margin-bottom: 15px; border-bottom: 1px solid #ddd; padding: 10px;">
                <div>
                    <strong>@user.Name</strong> - @user.Email
                </div>
                <div style="margin-top: 10px;">
                    <RadzenButton Text="Delete" Click="() => DeleteUser(user.Id)" Style="margin-right: 10px;" ButtonStyle="ButtonStyle.Danger" />
                    <RadzenButton Text="Edit" Path="@($"/update-user/{user.Id}")" ButtonStyle="ButtonStyle.Primary" />
                </div>
            </div>
        }
    </RadzenCard>
}
else
{
    <RadzenCard Style="padding: 20px; background-color: #f5f5f5; text-align: center;">
        <p>No users found</p>
    </RadzenCard>
}

@code {
    private List<User>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsers();
    }

    private async Task DeleteUser(int id)
    {
        await UserService.DeleteUser(id);
        users = await UserService.GetUsers(); // Refresh the user list
    }
}
